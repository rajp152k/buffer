:PROPERTIES:
:ID:       2f67eca9-5076-4895-828f-de3655444ee2
:END:
#+title: Database
#+filetags: :programming:data:

* Types (Need Not be Mutually Exclusive)
** [[id:fe29fdde-c87f-4ef7-865b-c997447e435d][Relational Databases]]
*** Interfaces
**** [[id:f960e9a7-6aa0-4c75-a462-05b55a21420d][Object Relational Mappers]]
**** [[id:8bba90f5-5880-4c5d-b969-3ae17b53dc35][SQL]]
** [[id:3231e4a2-702d-4fd2-89ed-6efb34e2c3ee][Graph Database]]
** [[id:e0b24113-36fd-44dc-9049-2cf493079d1a][Document Stores]]
*** Tools
 - semi structured representation for nested data (json,bson,etc)
**** MongoDB
**** Riak
**** Apache CouchDB
** [[id:91a15189-1200-463e-a648-1f1b938370af][Key-Value Stores]]
 - underlying data stucture being the [[id:235113d9-983a-4782-a4e8-d027ba52d82b][HashMap]]
*** Tools
**** Redis
 - in memory 
 - good for caching, queuing, and storing session data and requests
 - check out : https://realpython.com/python-redis/
**** Memcached
** [[id:dd9cdc7c-154f-4082-993b-384ea9becd2d][Columnar Databases]]
 - builds on key-value pairs
 - each pair a row in a store while each column family is similar to a table in the relational model.
*** Tools
**** Apache Cassandra
**** Apache HBase
** [[id:f86c0a4b-978a-4b94-ad3f-233ded9c4c6a][In-Memory Databases]]
** [[id:5447792f-f653-41db-acfa-fe7c3018c459][Time-Series Databases]]
** [[id:e1ce3df0-0337-4f65-a9d7-edc361d88075][NewSQL Databases]]
* Auxiliary features
** Data Replication
- one master, multiple read-only slaves (different than sharding)
** Semi-structured storage opportunities
 - JSON type in RDBMS for instance
** Sharding
 - horizontal scaling for multiple read/write instances
   - introduces delays for maintenance of data consistency
** Monitoring
 - Profiling processes, analysing frequency of certain queries, etc, help with better structuring the templates (index, schema, etc) to push for performance
