:PROPERTIES:
:ID:       c2072565-787a-4cea-9894-60fad254f61d
:ROAM_ALIASES: K8s
:END:
#+title: Kubernetes
#+filetags: :arch:compute:tool:

* Abstract
Conductors (or Choreographers (based on your tastes)) for [[id:d4627a77-fafc-4c76-91a2-59a84e42de71][containerization]].
* Resources
** [[id:9ee8a972-bf6a-46ae-a7f5-dda8814a2fcf][Production Kubernetes]]
 - https://tanzu.vmware.com/content/ebooks/production-kubernetes
* Kubernetes Glossary
:PROPERTIES:
:ID:       ff47bca7-aaaa-4e76-8624-3f14300b2591
:END:
** Pods
 - https://kubernetes.io/docs/concepts/workloads/pods/
 - smallest deployable unit of compute that can be created and managed in kuberenetes
 - they are ephemeral (an individual pod shouldn't be considered as reliable and durable)
** Deployments
 - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
 - representation of a desired state for pods or ReplicaSets
 - The Deployment resource is only the configuration for the desired state but the deployment controller actually manages and updates the state.
** Service
 - https://kubernetes.io/docs/concepts/services-networking/service/
 - a method for exposing a network application running on (a) pod(s) on the cluster.
 - as pods are ephemeral, a service acts a persistent end point in case they're restarted
** Ingress
 - https://kubernetes.io/docs/concepts/services-networking/ingress/
 - mediates external access
 - API object : The ingress resource is a set of rules and configurations
 - Ingress Controller is the actual software that puts the Ingress resource (the rules and configurations) to use and configures the load balancer and directs traffic according to the rules
 - some common ingress controllers:
   - [[id:728c723c-57f3-4b18-beab-a906d931743d][Nginx]] : https://docs.nginx.com/nginx-ingress-controller/
   - Traefik
   - HAProxy
   - Kong
   - Ambassador
