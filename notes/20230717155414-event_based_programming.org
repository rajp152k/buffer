:PROPERTIES:
:ID:       46f09529-c273-49ed-9bf7-7e0a6d97d65c
:ROAM_ALIASES: callbacks hooks "Event Based Programming"
:END:
#+title: Event Driven Programming
#+filetags: :programming:

This principle paradigm used in Graphical User Interfaces (eg, upon click/submit, etc) and in cases when one uses triggers related to an event rather than querying to verify if that event happened.

In the generic structure of the driver, we have a main loop (aka listener instead of an asker in the conventional verification solution) that acts(executes hooks/callbacks) when certain events are triggered.

This may even be implemented by hardware interrupts in the case of embedded systems.

Any procedure one executes post an event may be termed as an event-handler/hook/callback.

Segue into the higher level programming abstractions of await(coupled with async) and closures (colloquially lambdas).

Exploring the practical component via [[id:c9704c39-0c34-40af-b7f7-973cdd03cb05][Async-IO-python]]
