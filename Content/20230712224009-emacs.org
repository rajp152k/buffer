:PROPERTIES:
:ID:       20230712T224009.631876
:END:
#+title: Emacs
#+filetags: :emacs:

* Stream
** 0x22E9
 - doom configs : https://github.com/rajp152k/.dotfiles/tree/master/doom/.config/doom
** 0x22CA
*** Context
 - working in the cloud native space
 - golang is the cloud native language
*** Go installation
 - install go and add to path
   - https://go.dev/doc/install
 - verify with =go version=
*** Lsp-mode with golang
- install gopls :
  - =go install golang.org/x/tools/gopls@latest=
  - verify with =gopls version=
*** Sentinel repository
 - =git clone https://github.com/rajp152k/xkcd-corpus-builder=
 - jumping around
 - running tests
   - ginkgo and gomega
 - lsp all options
 - snippets
 - M-x Compile
 - local e-shell
*** Debugging with Dap
*** Bonus Video
** 0x22CA
- setting up emacs for data science
- basic priorities : interactive repl based on which mamba env I am in
- language server integration
- able to see notebooks and images
- able to work with juptyer notebooks
** 0x22C9
*** intro

- techno-talkthrough
  - larger, overarching concept
  - rapid practical examples

- this video:

  - idea is to build the conceptual idea buff stackability in you tools

  - the collaborative interop is greater  than the individual worths of these tools

*** buff stacking emacs

   - the extensibility allows the community to be flexible and build all sorts of things

   - can fit your needs (whatever they are)

   - sensible defaults with doom emacs can get you started quickly

   - to the pragmatics right away

   - the toolsets stack on each other due to powerful & uniform underlying representation

   - lisp machine: i'm actively exploring this more and will soon publish fully-baked content

*** pragmatics

 - version control anything: magit
   - faster porcelain than the cli
   - dedicated video coming in soon

 - llm interface as a text buffer

 - eww -> firefox

 - lsp-mode (+ dap + treesitter)
   - polyglotic programming ++
   - generic programming hooks (m-x compile, etc)

 - org -> blogs, todos, capture buffers, notes, literate programming, babel
   - dedicated video coming soon

 - context-aware snippets
   - python
   - go
   - markups, org, markdown

 - dired, projectile, buffer, proc, file management
   - can also use external proc management if you prefer that
   - i prefer btop as a decent monitor of all (metrics) at once
     - temp, other misc stuff
     - compute(cpuutils, mem), storage(iops), networks(b/s)
     - proc management
   - i like it this way: wouldn't want monitoring emacs from emacs

 - i can't even claim to be an efficient emacs user yet
   - don't use elisp as much yet (other than configs), working actively on that front

*** emacs as your os

   - emacs as your os (lucky to spend 90% of my day in emacs)

     - for the modal humans our there : emacs is my normal mode now

     - can further minimize context switching by altering your workflows into more keyboard oriented modalities
       - firefox + vimium
       - i3wm if you're xorg, i'm on wayland so sway

*** what next?

 - i also blog : check out the bitmage.com
   - if you're into text (site.xml rss at the bottom left)

 - a lot of emacs stuff coming in your way

 - also will get into a lot of cli linux/unix/gnu in a phase later on

 - thanks for tuning in, this was the bitmage

** 0x21BD

 - studying how org-lists work : might try to extend the features with something useful of my own
** 0x21b0
 - Will Be Altering The Work Space And The Required Mindset That Allows Me To Run Emacs As A Client With An Ever-Running Daemon
** 0x2178
 - I already use vim bindings in emacs but I do miss the command line
 - have decided to go minimal for my work and retain emacs for personal projects and writing
 - reading up on the unix philosophy and aiming to become a true shell ninja.
 - knowing about Unix operating system does excite me and do hope to learn a lot more
 - I'll definitely never give up emacs but a basic awareness of the operating system with the utilities of a CLI do encourage me to get good at both ecosystems
 - starting a similar [[id:8bc9d1c6-da56-4db9-a904-8f052e6836cb][Vim]] stream to log all my works, I'll be keeping the vimrc simple this time and not be using a lot of external plugins but rely on the vanilla features of vim
 - already excited about getting back to a dark green terminal screen..
** 0x2127
 - youtube video on navigating the text editing landscape
   - on why one should not settle even in 2023
 - starting with the skills necessary to efficiently edit text
   - touch typing -> efficient navigation (vim) -> playing with the nuts and bolts (emacs)
     - why not VS code?
** 0x211F
 - thinking of writing and emacs extension
   - visualizing my knowledge graph in an interactive manner
   - existing extensions do exist but it would be a good experience building it from scratch
   - will be proceeding formally and take it up as a proper initiative
** 0x211E
Started using smudge (spotify on emacs) : more time in emacs...
Thinking of summarizing my init.el in a blog : been around 2-3 years since I last did that 
** 0x2118
The single greatest tool choice I've ever made in terms of editing efficiently (right along side vim : I use Evil GccEmacs 28 as of now)
* Literature
 - [ ] https://www.masteringemacs.org/
 - [ ] https://www.oreilly.com/library/view/writing-gnu-emacs/9781449395056/
* Refs
 - my [[id:20230809T095308.040286][init.el]]
* Utilities
** [[id:be1c795a-add6-4122-add5-ead5f45fbab2][Org-mode]]
** [[id:72e5e672-da30-4fda-9efb-6258a1712f8f][Tramp]]
