:PROPERTIES:
:ID:       e9d75f9d-f8bf-4125-beb0-8ca34166ce9e
:END:
#+title: Data Engineering
#+filetags: :data:

* Core Nodes
** Data Engineering Lifecycle
*** Overview
**** Overall Flow
#+begin_src plantuml :file ./images/data-eng-lifecycle.png :exports both
@startuml

frame {
        [Storage]
}

frame Processing {
        [Ingestion] -right-> [Transformation]
        [Transformation]  -right-> [Serving]

        [Storage] -up-> [Ingestion]
        [Storage] -up-> [Transformation]
        [Storage] -up-> [Serving]
}

[Generation] -down-> [Processing]

frame Applications {
[Analytics]
[Machine Learning]
[Reverse ETL]
}

Serving =right=> Applications
@enduml
#+end_src

#+RESULTS:
[[file:./images/data-eng-lifecycle.png]]

**** Generation
 - source systems : origins of data in the lifecycle
 - possibilities:
   - [[id:b8f679c7-3ac1-48d7-b1b5-8e4743a62767][IoT]] device
   - application [[id:1073cfed-a09d-48b6-bd52-ba09708699bf][message queue]]
   - transactional [[id:2f67eca9-5076-4895-828f-de3655444ee2][database]]
 - the data engineer consumes from the source systems but doesn't own them
 - practical examples:
   - application database
   - IoT swarms
**** [[id:18491388-2dcc-488f-8f33-00582cf0f77e][Storage]]
- data architectures leverage several storage solutions for all kinds of flows, stores and transitions
- they also need to have side-car processing capabilities to serve complex queries
- storage is omnipresent across the cycle from ingestion to serving results and the transformations sandwiched within
- streaming frameworks like [[id:fa58feb4-25a2-40f1-8533-cafcb0d3886b][apache kafka]] and [[id:5e438030-0096-4b97-8931-f99eb7b738c5][pulsar]] can simultaneously function as ingestion, storage and query systems for messages
**** [[id:5cc98814-915c-4e20-a8e5-82ddd6783466][Ingestion]]
**** Transformation

In the data engineering lifecycle, the transformation process is a critical stage where raw data is converted into a suitable format for analysis and utilization. Here are the key aspects of the transformation process:

- *Extraction*:
  - Raw data is sourced from multiple origins, including databases, external data feeds, sensors, and more.

- *Data Cleaning*:
  - Removing duplicates, correcting errors, and filling in missing values to ensure data quality.
  - Standardizing data formats and naming conventions for consistency.

- *Data Integration*:
  - Combining data from different sources to provide a unified view.
  - Resolving heterogeneities and conflicts in data schemas.

- *Data Transformation*:
  - Changing data from its original form into a format that is analyzable. This includes:
    - *Normalization/Denormalization*: Adjusting the data structure for better access or storage.
    - *Aggregation*: Summarizing data to provide insights at a higher level.
    - *Enrichment*: Adding new data fields derived from existing data to enhance context.

- *Filtering*:
  - Removing unnecessary or irrelevant data to focus on what's important.

- *Feature Engineering*:
  - Creating new variables or modifying existing ones to improve the performance of models.

- *Validation*:
  - Ensuring that transformed data meets quality and integrity standards.
  - Conducting checks against business rules and expectations.

***** *Connections and Importance*:
- The transformation process is intrinsically connected to subsequent stages of data analytics and machine learning, as the quality and structure of transformed data directly impact the performance of analytics models.
- It ensures that data is suitable for storage in a data warehouse or data lake, where further data exploration can occur.
- By transforming data appropriately, businesses can derive actionable insights that drive strategic decisions.

**** Serving
 - [[id:552f0396-488d-43d8-8b44-f68dff74fa5e][Analytics]]
 - [[id:49b0dd1e-ca9e-46fa-a0b9-db0ec330833d][MultiTenancy]]
 - [[id:20230713T110006.406161][Machine Learning]]
 - Reverse [[id:1656ed9e-9ed0-4ddb-9953-98189f6bb42e][ETL]]
*** Undercurrents
**** [[id:6e9b50dc-c5c0-454d-ad99-e6b6968b221a][Security]]
 - Access Control for:
   - Data
   - Systems
 - [[id:d4f81cb7-e01b-4115-b8a1-9a303a82699d][The Principle of Least Privilege]]
**** Data Management
 - Data Governance
   - Discoverability
   - Definitions
   - Accountability
 - Data Modeling
 - Data Integrity
**** DataOps
 - Data Governance
 - Observability and Monitoring
 - Incident Reporting
**** Data Architecture
 - Analyse tradeoffs
 - Design for agility
 - Add value to the business
**** [[id:f822f8f6-89eb-4aa8-ac8f-fdcff3f06fb9][Orchestration]]
 - Coordinate workflows
 - Schedule jobs
 - Manage tasks
**** [[id:5c2039f5-0c44-4926-b2d7-a8bf471923ac][Software Engineering]]
 - Programming and coding skills
 - Software Design Patterns
 - Testing and Debugging
*** [[id:9204583f-13ab-4039-9bfc-453700f8b0d1][The Data Life Cycle]]
 - The Data engineering lifecycle is a subset of the data life cycle (explored separately)
** [[id:710e11f8-780a-4aa5-84fc-c0ab9bb848c0][Big Data]]
* Tooling
** [[id:7aa94354-25d9-441b-993f-31ccc970edd3][Hadoop]]
** [[id:1978cfeb-5ff8-49d1-a1e1-7306151f9850][Spark]]
** [[id:ebd4a55a-6d00-4c3f-9a8a-f806a3e5c2bc][Pig]]
** [[id:62ba92d7-598d-4cc9-b2bd-8bc7bcab7123][Hive]]
** [[id:bf454d38-3ffb-4ef7-9c3b-5e20b8a5b279][Dremel]]
** [[id:99aafe54-241d-4683-ae2d-4152bb9801fc][HBase]]
** [[id:11df321c-ace6-45f2-a080-bdfc2431ae3a][Storm]]
** [[id:20240519T221905.005300][Cassandra]]
** [[id:a34cc866-ec4b-44f5-972f-1c12782f649d][Presto]]
* Resources
** Books
*** Fundamentals of Data Engineering
** Articles
***  Data Observability Driven Development
   - https://www.kensu.io/blog/a-guide-to-understanding-data-observability-driven-development
