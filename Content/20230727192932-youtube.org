:PROPERTIES:
:ID:       20230727T192932.286062
:END:
#+title: Youtube
#+filetags: :transient:meta:

checkout : https://youtube.com/@rajp152k?si=mnFzfa1b1lT4C5Ke

* Comment Stream
** 0x2143
 - initializing an iteration on my creation process
 - will be recording all feedback and relevant 
** (0x2122) YT Init : Incentives and Plans
*** History
- second youtube channel
- first -> to practice rhetoric
- did help with working out the kinks in my communication skills
*** Abstract
- writing a pretty good way to express yourself and show your work
- albeit.., still incomplete : videos complement the process of expression
- speaking into a camera, speaking from experiences, tricks you into thinking you're addressing a large audience - a pretty neat trick, I would say
- I'm starting again with a slightly formal approach : https://www.youtube.com/@rajp152k 
*** Settling into a Niche
- Some topics that I'll explore initially:
    - Emacs -> instructive/customization
    - Common Lisp -> instructive
    - Programming Language Theory (Racket)
    - Book Reviews/follow-throughs (non-fiction/technical)
    - Interesting Research from different domains
    - Workflows, tools for relevant tasks
    - the occasional philosophical rant
*** The Long Term Plan
- freedom of expression is a given
- being free enough to express is what we generally lack...
- targeting at least a video a week..

* Buffer
** Work in Progress
** Prospectives
*** initialize a consolidators playlist
 - discusses results, feedback, plans and improvements since the last consolidator
 - Preferably : a weekly process published every saturday discussing the progress over the week
 - the qualitative and the quantitative
   - qualitative discusses my delivery, content, how consumers resond etc.
   - quantitative discusses consumer metrics, meta-data about the videos (length, etc) that are relevant to the qualitative aspect
*** generic ideas : introduction to new data science libraries
*** building a good relationship with text
 - My text editing journey
 - Vim, Emacs and VS code
 - first : learning to touch type
 - ditching the mouse
 - customization : everything is data (text)
   - variables, functions, hooks, representations...
   - custom keymaps :- chords and strokes	
   - implicitly encode semantics into the binds
 - what is a good text editor?
   - the one that gets the job done
     - sed, for that matter on a remote server's docker container where don't even have vim installed
       - to change a single line of text in a mis-represented data/config file (eg: mal-headered csv) : where you don't have any editor installed
   - the one that lets you do it quickly
   - the one that assists you to get better at it
   - the one that makes you come back
 - Recommendation
   - Home: Evil Emacs
   - Work : VS code with a vi extension
     
