:PROPERTIES:
:ID:       20231212T081635.633143
:END:
#+title: Programming
#+filetags: :root:programming:

Reference Collating Node

* Abstract
[[id:6f9a4752-aa66-42cf-9b88-2e4fa2091511][Computer Science]] is Physics to the Math that Programming is.
Algorithms are represented by programs. Representing programs is domains in itself and roots from byte representations in assmembly to high level programming languages (modern stack, punch cards in the old days). Building useful [[id:20240218T061653.528745][Abstractions]] is a core tenet of a notion of a useful program. This facilitates (already enabled by low level languages) interactions with high level programming notions, their analysis and manipulation/composition for further abstractions.

I'll be exploring both, high and low level, ends of this spectrum in this node cluster and will be documenting the purpose of their existence for the concerned context.

* Major Forks/Flavors
 - [[id:20231212T081851.998455][Object Oriented Programming]]
 - [[id:20231212T081907.908301][Functional Programming]]
 - [[id:20231212T082000.168442][Meta-Programming]]
* Minor Forks/Flavors
 - [[id:20230812T200515.697950][Literate programming]]
 - [[id:46f09529-c273-49ed-9bf7-7e0a6d97d65c][Event Based Programming]]
 - [[id:b2ce2739-98c4-4ff0-931c-3a836686bf55][Asynchronous Programming]]
* Practical
** [[id:5c2039f5-0c44-4926-b2d7-a8bf471923ac][Software Engineering]]
** [[id:58ea31e4-95ae-4c25-b475-c8686fe23817][Devops]]
** [[id:bc1cc0cf-5e6a-4fee-b9a5-16533730020a][Cloud Computing]]
** [[id:155f01c1-68e6-43ee-95e2-7a5bb6a70368][Debugging]]
* Stream
** 0x21F1
 - programming can really be boiled down into how instructions (computing) and data (memory) communicate with each other (networking) to achieve and objective.
 - thinking this serves to be a good blanket statement that helps cover the notion of 
