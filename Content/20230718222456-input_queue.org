:PROPERTIES:
:ID:       20230718T222456.978981
:END:
#+title: input-queue

I like reading technical books and am planning to expand my coverage to include foundational papers of some subjects that I find interesting: with the intention of understanding how subjects today interweave.
This buffer maintains a cache of technical papers/books/blogs/similar resources I'd like to go through. This is also an exercise in building up my reading efficiency for technical texts. I'm pretty quick with generic public domain non-fiction now and would like to up the ante: to maintain the effort I require to achieve [[id:20230718T223411.394444][flow]] (Mihaly Csikszentmihalyi).
I'll most likely begin with foundational papers in any domain and then explore depth if need be. will not be limiting myself to anything specific : anything goes - this is a new hobby.
I'd also like maintaining a log of all relevant articles/interviews/not-so-easily-indexable content that I've consumed [[id:ab47b014-ba85-4e68-8e61-6af7126dae1f][here]].
* Deferred Internal Index
Refraining from linking nodes as these are meta-informative and don't really point to populated nodes.
These are meant to be navigated with org-roam emacs and accessing them is convenient as is with helm-completion

 - stream node ~0x21B0~ of ~OOP~ root node
 - stream node ~0x21B0~ of ~Emacs~ tool node
 - complete first resource of ~Axiology~ meta root node and populate all relevances
 - fill in the basics of the ~Search~ node and initialize a project for your brain dump where you write a basic search engine for the same : i'm inclined towards a browser-based grep solution.
   - building an index is what I do for the main blog using lunr.js, but I'd like to experiment a little on the main site.
* Utilities Index
 - https://github.com/cjbarber/ToolsOfTheTrade
* Crowd sourcing
** https://news.ycombinator.com/
** http://wiki.c2.com/
** https://www.cliki.net/
* Blog posts
** [[https://microsoft.github.io/TypeChat/blog/introducing-typechat/][Introducing TypeChat - TypeChat]]
** https://simonwillison.net/2023/Aug/3/weird-world-of-llms/
** https://mitpress.mit.edu/mit-presss-direct-to-open-d2o-achieves-second-year-goal-opens-access-to-eighty-two-new-books-in-2023/
** [[https://interviewing.io/blog/sabotage-salary-negotiation-before-even-start][How to sabotage your salary negotiation efforts before you even start]]
** https://questdb.io/blog/concurrent-lockfree-datastructure-design-walkthrough/
** http://matpalm.com/blog/cool_machine_learning_books/
** https://0x65.dev/blog/2019-12-06/building-a-search-engine-from-scratch.html
* Books 
** https://tgvaughan.github.io/sicm/toc.html
** https://www.goodreads.com/book/show/44144493-fundamentals-of-software-architecture?ref=rae_3
** https://www.goodreads.com/book/show/120532868-machine-learning-system-design-interview
** https://www.goodreads.com/book/show/54109255-system-design-interview-an-insider-s-guide
** https://huyenchip.com/ml-interviews-book/
** https://www.masteringemacs.org/book
** [[https://www.oreilly.com/library/view/mastering-regular-expressions/0596528124/][Mastering Regular Expressions, 3rd Edition [Book]​]] 
** http://www.paulgraham.com/hp.html
** https://course.fast.ai/Resources/book.html
** https://pimbook.org/
** [[https://mitpress.mit.edu/9780262046824/probabilistic-machine-learning/][Probabilistic Machine Learning]]
** Peopleware : Productive projects and teams
 - https://www.goodreads.com/en/book/show/67825
** [[https://mitpress.mit.edu/9780262028967/structure-and-interpretation-of-classical-mechanics/][Structure and Interpretation of Classical Mechanics]]
* Courses
 - https://web.stanford.edu/class/cs168/index.html
* Papers
** [[https://ieeexplore.ieee.org/document/6770404][The UNIX time-sharing system]]  
** [[https://www.amazon.science/publications/dynamo-amazons-highly-available-key-value-store][Dynamo: Amazon’s highly available key-value store - Amazon Science]] 
** [[https://arxiv.org/abs/2003.02320][[2003.02320] Knowledge Graphs]]
** https://www.lrde.epita.fr/dload/papers/newton.16.monad.report.pdf
** https://applied-langua.ge/~hayley/swcl-gc.pdf
** https://explained.ai/matrix-calculus/
* Docs/tools/tuts
** http://regextutorials.com/
** https://spacy.io/
** [[https://github.com/dabeaz-course/python-mastery][GitHub - dabeaz-course/python-mastery: Advanced Python Mastery]]
** [[https://github.com/jesseduffield/lazydocker][GitHub - jesseduffield/lazydocker]]
** [[https://radimrehurek.com/gensim/][Gensim: Topic modelling for humans]] 
** [[https://prodi.gy/][Prodigy · Prodigy · An annotation tool for AI, Machine Learning & NLP]]
** https://jupyter-ai.readthedocs.io/en/latest/
** https://seed-rs.org/
** https://lunrjs.com/
** https://github.com/norvig/pytudes
** https://www.math.uci.edu/~rvershyn/teaching/hdp/hdp.html
** [[http://xahlee.info/js/svg.html][svg - xah lee tutorial]]
** https://voila.readthedocs.io/en/stable/
** SQL
*** [[https://datalemur.com/sql-tutorial?utm_source=datapragmatist&utm_medium=newsletter&utm_campaign=comprehensive-guide-to-r-squared-sql-learning-and-apple-interviews-experience][sql tutorial for data science]]
** DBs
 - [[https://redis.io/][Redis]]
 - [[https://www.mongodb.com/][MongoDB]]
** languages
 - https://www.perl.org/ : aka the duct tape of the internet
