:PROPERTIES:
:ID:       477c67c1-b742-4b54-886f-a06ad47f231f
:END:
#+title: Software Architecture
#+filetags: :meta:sys:design:swarch:


* Overview

The fundamental components of software architecture are the building blocks and the rules governing their assembly. These include:

**  Structural Elements: These are the fundamental units of software.
    - [[id:********T******.******][Components]]: Pieces of software with well-defined interfaces and responsibilities (e.g., a database module, a UI element, a service).
    - [[id:**ea****-**b****d******-****dbe****b][Connectors]]: Mechanisms that enable communication and interaction between components (e.g., function calls, message queues, APIs, shared memory).
**  System [[id:fb70ed39-763c-4dbf-9367-75e3d5a14bff][Properties]]: These are the qualities and characteristics the software should exhibit.
    - [[id:8b14c812-86d6-404f-bf9b-9b034cd99d58][Functional Requirements]]: What the software /does/.
    - [[id:ac1da734-18a2-4d9e-80ca-806c15cb428c][Non-Functional Requirements]] (Quality Attributes): How well the software performs its functions (e.g., performance, scalability, security, usability, maintainability, reliability, testability). These often represent the "ilities".
**  [[id:9df22b18-ec04-4477-acdf-6bc7364da926][Architectural Patterns]] & [[id:1a835906-4e76-4b7f-91ae-cdadb8e8e2bf][Styles]]: High-level organizational principles that guide the arrangement of components and connectors.
**  Design Decisions: Choices made about the structure, organization, and properties of the system.
**  [[id:48a09714-f857-4d35-a138-e28e8d13f5a4][Constraints]]: Limitations or restrictions that influence design decisions .
**  [[id:507d9789-e0fe-4c9d-ad61-fceed2816a5c][Stakeholders]]: Individuals or groups with an interest in the software system (e.g., users, developers, project managers, clients, operations teams). Their concerns significantly shape the architecture.

