:PROPERTIES:
:ID:       20230715T173535.681936
:END:
#+title: Data Structure
#+filetags: :programming:data:

* Stream
** 0x2250
 - exploring consensus algorithms, some relevant structures
   - [[id:20240519T201001.324666][Merkle Tree]] (also used in [[id:038e3720-0307-41d8-bcb1-e77b75a161df][Version Control]])
   - [[id:20240519T213730.807988][SS Table]]
   - [[id:20240519T214118.461723][Bloom Filter]]
** 0x21B6
 - initializing the first dedicated population phase
   - need a stable base for all specializations 
   - will be proceeding in python
   - accompanied by a parallel phase for [[id:f9c89977-5a4b-4c21-b340-56b204cfb35d][Algorithms]]
** 0x21B3
 - checkout [[id:86de7485-e9c0-4b7f-9f11-adb8229afdf4][Serialization]]
 - the right approach persistence does affect and applications health
** 0x21B1
 - Doing a quick overview of [[id:2f67eca9-5076-4895-828f-de3655444ee2][data storage methodologies]]
** 0x211A

A way of representing data in memory: The most primitive notion of a data structure arises from the ability to glue objects together according to one's preferred semantics, the variation in which gives rise to all the representations that can exist.

This glue can be at a physical level (adjacent registers) or be achieved with several levels of indirection ([[id:20230715T174319.700414][pointers]])

Closely related to a data structure, is its behavior under various operations (insert, delete, search,...). It is an abstraction of data that is exposed by these behaviors allowing one to manipulate it.

***  [[id:20230715T180212.260696][Mutability]]
This affects how one implements the said representation and the details of the abstraction (generation/return of references, copies, etc).
