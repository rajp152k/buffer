:PROPERTIES:
:ID:       c0964cd2-fa9c-4c92-8283-341d345c819f
:END:
#+title: RackOS
#+filetags: :cs:racket:

* Stream
** 0x22D2
 - so porting concepts from the three easy pieces into racket is the next plan
 - will have to understand C as well
 - I feel like I might just get on with common lisp rather than racket
** 0x22D1
:PROPERTIES:
:ID:       5673f3d4-294f-48bc-b44a-f145cc4a9e6b
:END:
*** Operating Systems: Three Easy Pieces : https://pages.cs.wisc.edu/~remzi/OSTEP/
 - [[id:104f0326-0505-4bbe-a78f-b9273f051b42][Virtualization]]
 - [[id:d2d0f670-9bdf-437a-a639-fbdf7ba7d6c7][Persistence]]
 - [[id:618d0535-411d-4c36-b176-84413ec8bfc1][Concurrency]]
*** thoughts
 - might consider proting the homework into racket
 - that might be a ery interesting porject in itself (expecting it to be in C, of course)
 - am considering actually doing it in C first and then porting to racket
 - anywanted to get into low level stuff
 - okay: I'm going to do it in C first and then port it to racket
 - maybe I should name it [[id:e335ebc2-727a-4c98-afe5-32edaec22706][C.RackOS]]
 - I'll return someday for sure
** 0x22D0
*** revenge of the son of the lisp machine
 - https://www2.ccs.neu.edu/racket/pubs/icfp99-ffkf.pdf
** 0x22CF
*** some (de)Motivation
- https://wiki.osdev.org/Beginner_Mistakes
*** Thought stream
 - will go for a CLI initially
   - GUI later on
 - should also get good with the racket ecosystem
 - will catch up on OS design
 - have my work chalked out for me : will be a great project though
*** wiki.osdev.org
*** r/racket
 - try to figure out how one could go about the whole process
 - there are some talks that already exist : https://www.reddit.com/r/Racket/comments/syv2ql/bare_metal_racket/
*** Miscellaneous links
 - https://armpit.sourceforge.net/
 - https://guix.gnu.org/ (booting to Guile)
 - https://wiki.osdev.org/Languages
 - https://matt.might.net/articles/low-level-web-in-racket/
 - https://en.wikipedia.org/wiki/Lisp_machine : explore this a whole lot more
 - https://luksamuk.codes/posts/lispm-001.html
 - https://awesome-racket.com/
 - https://felleisen.org/matthias/manifesto/
 - https://docs.racket-lang.org/foreign/index.html
 - https://github.com/cfenollosa/os-tutorial
*** exploratory term analysis queue
 - interrrupt handlers
 - system calls
 - bootloader
 - kernel space
 - user space
 - filesystem
 - scheduling
 - threading
 - memory management
 - intruction set
 - networking
** 0x22CE
*** picking up racket again
- https://docs.racket-lang.org/more/index.html
*** Setting up Emacs for Racket dev
- get racket (zypper in racket)
- setup doom emacs for racket dev
- (racket +lsp +xp +hash-lang)
  - true Î»
  - (add-hook 'racket-mode-hook      #'racket-unicode-input-method-enable)
  - (add-hook 'racket-repl-mode-hook #'racket-unicode-input-method-enable)
- raco pkg install racket-langserver
*** Expectations
- fun & frustration
*** Seeding Resources
 - wiki.osdev.org
 - a lot of mistakes
*** The Documentation strat
- youtube playlist + streams out here with links
- blogs for major updates
*** Premise
 - I'm taking on the long term side project of building an operating system in Racket
 - I know this is scary and ambitious but it's also exciting and sounds somewhat crazy
 - do check out the ideation init : https://thebitmage.com/post/tumbleweed/
